package org.example.controller;

import javax.swing.JOptionPane;
import org.example.gui.GoView;
import org.example.model.Colour;
import org.example.model.GoModel;

public class GoController {
  private final GoModel model;
  private GoView view;

  public GoController(GoModel model) { this.model = model; }

  public void setView(GoView view) { this.view = view; }

  public boolean handleMove(int x, int y) {

    if (model.isGameFinished())
      return false;

    Colour colour = model.getCurrentPlayer().getColour();
    if (model.getBoard().isEmpty(x, y) && !model.isSuicideMove(x, y)) {
      model.savePreviousBoardState();
      model.getBoard().placeStone(x, y, colour);
      captureStones(x, y, colour);

      if (model.isKo()) {
        JOptionPane.showMessageDialog(view, "Mossa non valida, KO.");
        model.getBoard().placeStone(x, y, null);
        model.restorePreviousBoardState();
        return false;
      }
      model.nextTurn();
      view.refreshBoard();

      return true;
    }
    System.out.println("Errore");
    return false;
  }

  public void startNewGame() {
    model.startNewGame();
    view.refreshBoard();
  }

  public void finishGame() {
    model.finishGame();
    int blackScore = model.calculateScore(Colour.BLACK);
    int whiteScore = model.calculateScore(Colour.WHITE);
    JOptionPane.showMessageDialog(view,
                                  "Punteggio Finale:\nNero: " + blackScore +
                                      "\nBianco: " + whiteScore);
  }

  private void captureStones(int x, int y, Colour colour) {
    Colour opponent = (colour == Colour.BLACK) ? Colour.WHITE : Colour.BLACK;

    removeIfCaptured(x + 1, y, opponent);
    removeIfCaptured(x - 1, y, opponent);
    removeIfCaptured(x, y + 1, opponent);
    removeIfCaptured(x, y - 1, opponent);
  }

  private void removeIfCaptured(int x, int y, Colour colour) {
    if (x < 0 || y < 0 || x >= model.getBoard().getSize() ||
        y >= model.getBoard().getSize()) {
      return;
    }
    // return;
    if (model.getBoard().getGrid()[x][y] == colour &&
        !model.isSuicideMove(x, y)) {
      model.getBoard().removeStone(x, y);
      System.out.println("Risolto");
    }
  }
}
